{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/display-users/display-users.component.ts","webpack:///src/app/display-users/display-users.component.html","webpack:///src/app/employee/employee.component.ts","webpack:///src/app/employee/employee.component.html","webpack:///src/app/service/error-handler.service.ts","webpack:///src/app/service/http-client.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","RoutingComponent","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DisplayUsersComponent","httpClientService","uName","FindUser","EmployeeComponent","pWord","localvariable","register","subscribe","data","console","log","JSON","stringify","login","Register","Login","ErrorHandlerService","error","ErrorEvent","message","status","providedIn","HttpClientService","httpClient","errorHandler","post","username","password","pipe","handleError","name","get","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {EmployeeComponent} from './employee/employee.component';\nimport { DisplayUsersComponent } from './display-users/display-users.component';\n\nconst routes: Routes = [\n  {path: 'home', component: EmployeeComponent},\n  {path: 'display', component: DisplayUsersComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { } export const\nRoutingComponent = [EmployeeComponent,DisplayUsersComponent];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'employee-management';\n}\n","<h1>Angular 7 Routing Demo</h1>\n<nav>\n   <a routerLink = \"/home\">Home</a>\n   <a routerLink = \"/display\">Contact Us </a>\n</nav>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, RoutingComponent } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoutingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClientService } from '../service/http-client.service';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-display-users',\n  templateUrl: './display-users.component.html',\n  styleUrls: ['./display-users.component.css']\n})\n\nexport class DisplayUsersComponent implements OnInit {\n\n  uName = 'Jord';\n  data;\n\n\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  FindUser(): void\n  {\n  }\n}\n","<h1>Login</h1>\n<form (ngSubmit)=\"FindUser()\">\n  <label for=\"uName\">User name</label>\n  <input type=\"text\" id=\"uName\" name=\"uName\" [(ngModel)]=\"uName\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n  {{data[0]}}\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClientService } from '../service/http-client.service';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  uName = 'j';\n  pWord = 'fef';\n  data: string;\n  localvariable = {};\n\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  Register(): void\n  {\n    this.httpClientService.register(this.uName, this.pWord).subscribe(data => {console.log(data); this.data = JSON.stringify(data); });\n  }\n\n  Login(): void\n  {\n    this.httpClientService.login(this.uName, this.pWord).subscribe(data => {console.log(data); this.data = JSON.stringify(data); });\n  }\n}\n","<h1>Register</h1>\n<form (ngSubmit)=\"Register()\">\n  <label for=\"uName\">User name</label>\n  <input type=\"text\" id=\"uName\" name=\"uName\" [(ngModel)]=\"uName\"><br><br>\n  <label for=\"pWord\">Password</label>\n  <input type=\"text\" id=\"pWord\" name=\"pWord\" [(ngModel)]=\"pWord\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n  {{data}}\n</form>\n\n<h1>Login</h1>\n<form (ngSubmit)=\"Login()\">\n  <label for=\"uName\">User name</label>\n  <input type=\"text\" id=\"uName\" name=\"uName\" [(ngModel)]=\"uName\"><br><br>\n  <label for=\"pWord\">Password</label>\n  <input type=\"text\" id=\"pWord\" name=\"pWord\" [(ngModel)]=\"pWord\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n  {{data}}\n</form>\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorHandlerService {\r\n\r\n  constructor() { }\r\n\r\n  public handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ErrorHandlerService } from './error-handler.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpClientService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private errorHandler: ErrorHandlerService\n  )\n  { }\n\n\n  register(uName: string, pWord: string): Observable<any>{\n    return this.httpClient.post(\n      'http://localhost:8001/register',\n      {username: uName, password: pWord}\n    ).pipe(catchError(this.errorHandler.handleError));\n  }\n\n  login(uName: string, pWord: string): Observable<any>{\n    return this.httpClient.post(\n      'Login-env.eba-qckyzwbx.ap-southeast-2.elasticbeanstalk.com/login',\n      {username: uName, password: pWord}\n    ).pipe(catchError(this.errorHandler.handleError));\n  }\n\n  findUser(name: string): Observable<any>{\n    console.log(name);\n    return this.httpClient.get('http://localhost:8003/retrieve-users/' + 'Jord').pipe(catchError(this.errorHandler.handleError));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}