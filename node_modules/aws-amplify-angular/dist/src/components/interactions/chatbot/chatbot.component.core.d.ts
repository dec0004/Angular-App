import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import * as ɵngcc0 from '@angular/core';
export declare class ChatbotComponentCore implements OnInit {
    protected amplifyService: AmplifyService;
    errorMessage: string;
    inputText: string;
    botName: string;
    chatTitle: string;
    clearComplete: boolean;
    messages: any;
    completions: any;
    currentVoiceState: string;
    inputDisabled: boolean;
    micText: string;
    voiceConfig: any;
    continueConversation: boolean;
    micButtonDisabled: boolean;
    audioInput: any;
    lexResponse: any;
    conversationModeOn: boolean;
    ref: ChangeDetectorRef;
    voiceEnabled: boolean;
    textEnabled: boolean;
    audioControl: any;
    protected logger: any;
    complete: EventEmitter<string>;
    constructor(ref: ChangeDetectorRef, amplifyService: AmplifyService);
    data: any;
    bot: string;
    title: string;
    clearOnComplete: boolean;
    ngOnInit(): void;
    performOnComplete(evt: any): void;
    onInputChange(value: string): void;
    onSubmit(e: any): void;
    onSilenceHandler: () => void;
    reset(): void;
    onError(error: any): void;
    lexResponseHandler(): Promise<void>;
    doneSpeakingHandler(): void;
    micButtonHandler(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChatbotComponentCore, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChatbotComponentCore, "amplify-interactions-core", never, { "data": "data"; "bot": "bot"; "title": "title"; "clearOnComplete": "clearOnComplete"; }, { "complete": "complete"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdGJvdC5jb21wb25lbnQuY29yZS5kLnRzIiwic291cmNlcyI6WyJjaGF0Ym90LmNvbXBvbmVudC5jb3JlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkluaXQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbXBsaWZ5U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy9hbXBsaWZ5LnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hhdGJvdENvbXBvbmVudENvcmUgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByb3RlY3RlZCBhbXBsaWZ5U2VydmljZTogQW1wbGlmeVNlcnZpY2U7XG4gICAgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG4gICAgaW5wdXRUZXh0OiBzdHJpbmc7XG4gICAgYm90TmFtZTogc3RyaW5nO1xuICAgIGNoYXRUaXRsZTogc3RyaW5nO1xuICAgIGNsZWFyQ29tcGxldGU6IGJvb2xlYW47XG4gICAgbWVzc2FnZXM6IGFueTtcbiAgICBjb21wbGV0aW9uczogYW55O1xuICAgIGN1cnJlbnRWb2ljZVN0YXRlOiBzdHJpbmc7XG4gICAgaW5wdXREaXNhYmxlZDogYm9vbGVhbjtcbiAgICBtaWNUZXh0OiBzdHJpbmc7XG4gICAgdm9pY2VDb25maWc6IGFueTtcbiAgICBjb250aW51ZUNvbnZlcnNhdGlvbjogYm9vbGVhbjtcbiAgICBtaWNCdXR0b25EaXNhYmxlZDogYm9vbGVhbjtcbiAgICBhdWRpb0lucHV0OiBhbnk7XG4gICAgbGV4UmVzcG9uc2U6IGFueTtcbiAgICBjb252ZXJzYXRpb25Nb2RlT246IGJvb2xlYW47XG4gICAgcmVmOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICB2b2ljZUVuYWJsZWQ6IGJvb2xlYW47XG4gICAgdGV4dEVuYWJsZWQ6IGJvb2xlYW47XG4gICAgYXVkaW9Db250cm9sOiBhbnk7XG4gICAgcHJvdGVjdGVkIGxvZ2dlcjogYW55O1xuICAgIGNvbXBsZXRlOiBFdmVudEVtaXR0ZXI8c3RyaW5nPjtcbiAgICBjb25zdHJ1Y3RvcihyZWY6IENoYW5nZURldGVjdG9yUmVmLCBhbXBsaWZ5U2VydmljZTogQW1wbGlmeVNlcnZpY2UpO1xuICAgIGRhdGE6IGFueTtcbiAgICBib3Q6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIGNsZWFyT25Db21wbGV0ZTogYm9vbGVhbjtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHBlcmZvcm1PbkNvbXBsZXRlKGV2dDogYW55KTogdm9pZDtcbiAgICBvbklucHV0Q2hhbmdlKHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgIG9uU3VibWl0KGU6IGFueSk6IHZvaWQ7XG4gICAgb25TaWxlbmNlSGFuZGxlcjogKCkgPT4gdm9pZDtcbiAgICByZXNldCgpOiB2b2lkO1xuICAgIG9uRXJyb3IoZXJyb3I6IGFueSk6IHZvaWQ7XG4gICAgbGV4UmVzcG9uc2VIYW5kbGVyKCk6IFByb21pc2U8dm9pZD47XG4gICAgZG9uZVNwZWFraW5nSGFuZGxlcigpOiB2b2lkO1xuICAgIG1pY0J1dHRvbkhhbmRsZXIoKTogUHJvbWlzZTx2b2lkPjtcbn1cbiJdfQ==